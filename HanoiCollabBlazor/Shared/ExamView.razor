@using HanoiCollab.Models

@if (_examLayout != null)
{
    <h3>Exam</h3>
    <p>
        Provider: <a class="link-primary" target="_blank" href="@_examLayout.OriginalLink.ToString()">@_examLayout.OriginalLink.Host</a>
        <br/>
        @if (_examLayout.Resources?.Any() ?? false)
        {
            <span>Exam Resources:</span>
            <br/>
            foreach (var resource in _examLayout.Resources)
            {
                <a class="link-info" target="_blank" href="@resource.ToString()">@resource.ToString().Truncate(16)</a>
                <br/>
            }
        }
    </p>

    @for (int i = 0; i < _examLayout.Questions.Count; ++i)
    {
        <QuestionView @ref="_tempRef" QuestionLayout="@_examLayout.Questions[i]" CommunityAnswer="@_communityAnswers[i]"/>
        _questionViews.Add(_tempRef);
    }   
}

@code {
    private QuestionView _tempRef;
    private ExamLayout _examLayout;
    private List<QuestionView> _questionViews;
    private List<CommunityAnswer> _communityAnswers;
    private Dictionary<string, int> _idToIndex = new();

    [Parameter]
    [EditorRequired]
    public ExamLayout ExamLayout
    {
        get => _examLayout;
        set
        {
            _examLayout = value;
            var newLength = _examLayout?.Questions.Count ?? 0;
            _questionViews = new List<QuestionView>(newLength);
            _communityAnswers = Enumerable.Range(0, newLength)
                .Select(i => new CommunityAnswer(_examLayout.Questions[i]))
                .ToList();
            _idToIndex.Clear();
            if (_examLayout?.Questions != null)
            {
                for (int i = 0; i < _examLayout.Questions.Count; ++i)
                {
                    _idToIndex.Add(_examLayout.Questions[i].Id, i);
                }
            }
            StateHasChanged();
        }
    }

    public void ReceiveQuestionUpdate(Question q)
    {
        if (_idToIndex.TryGetValue(q.QuestionId, out var index))
        {
            _communityAnswers[index].Update(q);
        }
    }

    public void ReceiveQuestionUpdate(QuestionUpdateInfo q)
    {
        if (_idToIndex.TryGetValue(q.QuestionId, out var index))
        {
            _communityAnswers[index].Update(q);
        }
    }
}
